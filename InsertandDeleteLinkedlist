import java.util.*;
public class deleteInsertLinklist {
	static class Node{
		int data;
		Node next;
		Node(int data){
			this.data=data;
			this.next=null;
		}
	}
	Node head=null;
	public void creater() {
		int data,n,m,p;
		Scanner sc = new Scanner(System.in);
		do {
			System.out.println("Enter the data");
			data=sc.nextInt();
			Node new_node=new Node(data);
			if(head==null) {
				head=new_node;
			}
			else {
				System.out.println("if you want add the beginning then press 1, at the end then press 2, at the any point then 3");
				m=sc.nextInt();
				switch(m) {
				case 1:
					new_node.next=head;
					head=new_node;
					break;
				case 2:
					Node temp=head;
					while(temp!=head) {
						temp=temp.next;
					}
					temp.next=new_node;
					break;
				case 3:
					System.out.println("enter the data where you want to add it");
					p=sc.nextInt();
					Node temp1=head;
					for(int i=0;i<p-2;i++) {
						temp1=temp1.next;
					}
					new_node.next=temp1.next;
					temp1.next=new_node;
					break;
				}
			}
			System.out.println("if you want more data then press 1");
			n=sc.nextInt();
		}
		while(n==1);
	}
	public void delete() {
		int n,p,m;
		Scanner sc = new Scanner(System.in);
		do {
			if(head==null) {
				System.out.println("ll does not exist");
			}
			else {
				System.out.println("if want to delete beginning then 1 , at the end then 2,at the any point then 3");
				m=sc.nextInt();
				switch(m) {
				case 1:
					Node temp=head;
					temp.next=temp;
					temp=head;
					break;
				case 2:
					Node temp1=head;
					Node ptr=temp1.next;
					while(temp1.next!=null) {
						temp1=ptr;
						ptr=ptr.next;
					}
					temp1.next=null;
					break;
				case 3:
					System.out.println("enter the value where you want to delete the data");
					p=sc.nextInt();
					Node temp2=head;
					Node ptr1=temp2.next;
					for(int i=0;i<p-2;i++) {
						temp2=ptr1;
						ptr1=ptr1.next;
					}
					temp2.next=ptr1.next;
					break;
					
							
				}
			}
			
			System.out.println("if you delete the data then press 1");
			n=sc.nextInt();
		}
		while(n==1);
	}
	public void transverser() {
		Node temp=head;
		if(head==null) {
			System.out.println("ll does not exist");
		}
		else {
			System.out.println(temp.data);
			temp=temp.next;
		}
	}

	public static void main(String[] args) {
		deleteInsertLinklist s=new deleteInsertLinklist();
		s.creater();
		s.delete();
		s.transverser();
		// TODO Auto-generated method stub

	}

}
